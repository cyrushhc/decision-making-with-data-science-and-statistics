# Multilateral Development Institution Data
foo <- read.csv("https://tinyurl.com/yb4phxx8") # read in the data

# take note of the columns representing calendar dates
date.columns <- c(11, 12, 14, 15, 16, 17, 18, 25)

# these columns need some tweaking--I want to address missing values, calling the blank (empty) 
# elements "NA" instead of leaving them blank, and I wish to tell R these are "Date" objects.

for(i in date.columns)  # this "for loop" only loops through the "date.columns" -- no other columns.
  
{
  # identify which values are missing in the "i"th column of the foo data set
  which_values_are_missing <- which(as.character(foo[, i]) == "")
  
  # those values that are missing (blank) in the "i"th column are replaced by <NA>
  # because R knows how to handle "NA" -- NA means something special in R--blanks are handled 
  # more unpredictably (which is bad).
  foo[which_values_are_missing, i] <- NA
  
  # last step--replace each of these columns (which is structured as a column of "factor" values)
  # as a column of dates--i.e., convert them to an object of "class" = Date. They are dates, after all.
  foo[, i] <- as.Date(as.character(foo[, i]))
  
}

which.have.NAs <- which(is.na(foo$Rating == TRUE)) # for which rows is the claim "is.na" a TRUE claim?

new_foo <- foo[-which.have.NAs, ]

#non-missing "Circulation.Date" >= 2009-01-01. 

noNA_foo <- new_foo[!is.na(new_foo$CirculationDate), ]
df <- noNA_foo[which(noNA_foo$CirculationDate >= as.Date("2009-01-01")), ]

# Check:
summary(df$CirculationDate)

# (1) When projects are approved, they are approved for a certain period (until the time of “orig-
# inal completion date”). While projects are active, this “original” completion date is often
# extended, and then there is a “revised” completion date. You have been told that project
# duration at approval is generally about two years (24 months). In other words, (purportedly)
# when projects are approved, the difference between the original project completion date and
# the approval date is (supposedly) approximately 24 months.

# (a) Is this claim true? Explain. 

# Some projects have no original completion dates.
# We need to disregard them.

mask <- which(is.na(df$OriginalCompletionDate))
df_withDates <- df[-mask,]
expected_duration <- mean(df_withDates$OriginalCompletionDate) - mean(df_withDates$ApprovalDate) 
expected_duration

# (b) Has the length of project delay, measured as the difference between “OriginalComple-
# tionDate” and “RevisedCompletionDate”, changed over time (consider projects circu-
# lated earlier and circulated later)?  


# Create a circulation year column
df_withDates$CirculationYear <- format(df_withDates$CirculationDate, "%Y")

# Check whether there are rows with NAs in the Revised Completion Date column?
sum(is.na(df_withDates$RevisedCompletionDate))  # No

# And an delay column
df_withDates$Delay <- df_withDates$RevisedCompletionDate - df_withDates$OriginalCompletionDate 

library(dplyr)  
delayByYear <- df_withDates %>%  
  group_by(CirculationYear) %>%    
  summarise(mean.delay = mean(Delay), 
            median.delay = median(Delay),
            IQR.delay = quantile(Delay, 0.75) - quantile(Delay, 0.25))
delayByYear


plot(delayByYear$CirculationYear, delayByYear$mean.delay, 
     pch=15, col="red", ylim=c(100, 800), 
     xlab="Circulation Year", ylab="Delay (days)", main="Project Delay")
points(delayByYear$CirculationYear, delayByYear$median.delay, pch=16, col="blue")
points(delayByYear$CirculationYear, delayByYear$IQR.delay, pch=17, col="green")
legend("bottomleft", pch=c(15,16,17), 
       col=c("red","blue","green"), 
       legend=c("Mean Delay", "Median Delay", "IQR of Delays"))
grid(nx=NA, ny=NULL)

# (c) How does the original planned project duration differ from actual duration (if the actual
# duration is measured as the duration between “ApprovalDate” and “RevisedCompletionDate”)?

# Create an actual duration column
df_withDates$ActualDuration <- df_withDates$RevisedCompletionDate - df_withDates$ApprovalDate

# Actual duration statistics
mean(df_withDates$ActualDuration) 
median(df_withDates$ActualDuration)
quantile(df_withDates$ActualDuration)
IQR(df_withDates$ActualDuration) 

df_withDates$ExpectedDuration <- df_withDates$OriginalCompletionDate - df_withDates$ApprovalDate

mean(df_withDates$ExpectedDuration)
median(df_withDates$ExpectedDuration) 
quantile(df_withDates$ExpectedDuration) 
IQR(df_withDates$ExpectedDuration)
range(df_withDates$ExpectedDuration)

ActualDurationByYear <- df_withDates %>%  
  group_by(CirculationYear) %>%    
  summarise(mean.duration = mean(ActualDuration), 
            median.duration = median(ActualDuration),
            IQR.duration = quantile(ActualDuration, 0.75) - quantile(ActualDuration, 0.25))
ActualDurationByYear

plot(ActualDurationByYear$CirculationYear, 
     ActualDurationByYear$mean.duration, pch=15, col="red", ylim=c(300, 1300),
     xlab="Circulation Year", ylab="Duration (days)", main="Actual Project Duration")
points(ActualDurationByYear$CirculationYear, 
       ActualDurationByYear$median.duration, pch=16, col="blue")
points(ActualDurationByYear$CirculationYear, 
       ActualDurationByYear$IQR.duration, pch=17, col="green")
legend("bottomleft", pch=c(15,16,17), 
       col=c("red","blue","green"), 
       legend=c("Mean", "Median", "IQR"))
grid(nx=NA, ny=NULL)

# (2) What % of projects completed between 2010 and now were rated 0? What % over the same
# time period were rated 1? What % were rated 2? What % were rated 3? Answer these questions using a table or a figure.

# We want project between 2010 and now
df2010 <- noNA_foo[which(noNA_foo$RevisedCompletionDate >= as.Date("2010-01-01")), ]

print("Distribution of Project Ratings")
prop.table(table(df2010$Rating)) * 100  


# (3) Repeat problem 2, but this time limit your analysis purely to policy and advisory technical
assistance (”PATA”) projects.

# Only PATA projects
df_PATA <- df2010[which(df2010$Type == "PATA"),]

print("Distribution of Project Ratings (PATA only)")
table(df_PATA$Rating) / length(df_PATA$Rating) * 100  


# (4) Identify the top 10% of projects by “Revised.Amount” and the bottom 10% of projects
# by “RevisedAmount” (“RevisedAmount” shows the final project budget). Compare the
# ratings of these projects. Can you draw a causal conclusion about the effect of budget
# size on ratings? Why or why not?

df_TopQuant <- df[which(df$RevisedAmount >= quantile(df$RevisedAmount, 0.9)),]
df_BottomQuant <- df[which(df$RevisedAmount <= quantile(df$RevisedAmount, 0.1)),]

# Compare the ratings

(table(df_TopQuant$Rating) / length(df_TopQuant$Rating) * 100) - 
  (table(df_BottomQuant$Rating) / length(df_BottomQuant$Rating) * 100)

# Compare other features

# Dept
table(df_TopQuant$Dept) - table(df_BottomQuant$Dept)


# Cluster
(table(df_TopQuant$Cluster) / length(df_TopQuant$Cluster) * 100) - 
  (table(df_BottomQuant$Cluster) / length(df_BottomQuant$Cluster) * 100)

# Country
(table(df_TopQuant$Country) / length(df_TopQuant$Country) * 100) - 
  (table(df_BottomQuant$Country) / length(df_BottomQuant$Country) * 100)
  
